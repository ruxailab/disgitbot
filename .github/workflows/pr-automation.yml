name: PR Automation System

on:
  # Original triggers for this repo
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    # Update labels cache weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'process_pr'
        type: choice
        options:
          - process_pr
          - collect_labels
          - update_cache
  
  # NEW: Make this workflow reusable for other repos
  workflow_call:
    inputs:
      repository:
        required: false
        type: string
        description: 'Repository name (owner/repo) - defaults to calling repo'
      pr_number:
        required: false
        type: number
        description: 'Pull request number - defaults to current PR'
      experience_level:
        required: false
        type: string
        default: 'intermediate'
        description: 'Developer experience level'
      action:
        required: false
        type: string
        default: 'process_pr'
        description: 'Action to perform'
    secrets:
      GITHUB_TOKEN:
        required: true
      GOOGLE_API_KEY:
        required: true

jobs:
  # Job 1: Process PR with AI automation
  process-pr:
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'process_pr') ||
      (github.event_name == 'workflow_call' && inputs.action == 'process_pr')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # If called from another repo, checkout this master repo
        repository: ${{ github.event_name == 'workflow_call' && 'ruxailab/disgitbot' || github.repository }}
        path: ${{ github.event_name == 'workflow_call' && 'pr-automation' || '.' }}
        token: ${{ secrets.GITHUB_TOKEN || github.token }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        pip install -r requirements.txt
        
    - name: Run PR automation
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || github.token }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        python main.py \
          ${{ inputs.repository || github.repository }} \
          ${{ inputs.pr_number || github.event.pull_request.number }} \
          ${{ inputs.experience_level || 'intermediate' }}
        
    - name: Upload processing logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pr-automation-logs-${{ inputs.pr_number || github.event.pull_request.number }}
        path: ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review/logs/
        retention-days: 7

  # Job 2: Collect labels from all RUXAILAB repositories
  collect-labels:
    if: |
      github.event_name == 'schedule' || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'collect_labels') ||
      (github.event_name == 'workflow_call' && inputs.action == 'collect_labels')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event_name == 'workflow_call' && 'ruxailab/disgitbot' || github.repository }}
        path: ${{ github.event_name == 'workflow_call' && 'pr-automation' || '.' }}
        token: ${{ secrets.GITHUB_TOKEN || github.token }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        pip install -r requirements.txt
        
    - name: Collect repository labels
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || github.token }}
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        python scripts/collect_repo_labels.py
        
    - name: Commit and push updated labels (only for master repo)
      if: github.event_name != 'workflow_call'
      run: |
        cd pr_review
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/collected_repo_labels*.json data/labels_collection_report.md
        git diff --staged --quiet || git commit -m "ðŸ¤– Update repository labels cache [automated]"
        git push
        
    - name: Upload labels data
      uses: actions/upload-artifact@v3
      with:
        name: repository-labels-data
        path: |
          ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review/data/collected_repo_labels.json
          ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review/data/collected_repo_labels_simplified.json
          ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review/data/labels_collection_report.md
        retention-days: 30

  # Job 3: Update labels cache for specific repository
  update-cache:
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'update_cache') ||
      (github.event_name == 'workflow_call' && inputs.action == 'update_cache')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event_name == 'workflow_call' && 'ruxailab/disgitbot' || github.repository }}
        path: ${{ github.event_name == 'workflow_call' && 'pr-automation' || '.' }}
        token: ${{ secrets.GITHUB_TOKEN || github.token }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        pip install -r requirements.txt
        
    - name: Update repository cache
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || github.token }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        cd ${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review
        python -c "
        from main import PRReviewSystem
        system = PRReviewSystem()
        result = system.update_repository_labels_cache('${{ inputs.repository || github.repository }}')
        print('Cache update result:', result)
        "

# Global environment variables for all jobs
env:
  PYTHONPATH: ${{ github.workspace }}/${{ github.event_name == 'workflow_call' && 'pr-automation/' || '' }}pr_review 