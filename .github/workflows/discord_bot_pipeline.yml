name: Discord Bot Data Pipeline

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch: {}  # Allow manual trigger
  push:
    branches:
      - post_visualization_refactor

jobs:
  # Discord Bot Data Pipeline - Individual stages for better visibility
  discord-bot-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.13.2
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.2'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libffi-dev libnacl-dev python3-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r discord_bot/config/discord_bot_requirements.txt

      - name: Set up Google Credentials
        run: echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" | base64 --decode > discord_bot/config/credentials.json

      - name: Stage 1 - Data Collection
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          GOOGLE_APPLICATION_CREDENTIALS: discord_bot/config/credentials.json
        run: |
          cd discord_bot
          python src/pipeline/stage_runners.py collection

      - name: Stage 2 - Data Processing
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          GOOGLE_APPLICATION_CREDENTIALS: discord_bot/config/credentials.json
        run: |
          cd discord_bot
          python src/pipeline/stage_runners.py processing

      - name: Stage 3 - Data Storage
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          GOOGLE_APPLICATION_CREDENTIALS: discord_bot/config/credentials.json
        run: |
          cd discord_bot
          python src/pipeline/stage_runners.py storage

      - name: Stage 4 - Discord Updates
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          REPO_OWNER: ${{ secrets.REPO_OWNER }}
          GOOGLE_APPLICATION_CREDENTIALS: discord_bot/config/credentials.json
        run: |
          cd discord_bot
          python src/pipeline/stage_runners.py discord

      - name: Pipeline Summary
        if: always()
        run: |
          cd discord_bot
          if [ -f pipeline_context.json ]; then
            echo "Pipeline execution completed!"
            echo "Final context summary:"
            python -c "
            import json
            try:
                with open('pipeline_context.json', 'r') as f:
                    context = json.load(f)
                print(f'- Contributors processed: {len(context.get(\"contributions\", {}))}')
                print(f'- Repository metrics: {bool(context.get(\"repo_metrics\"))}')
                print(f'- Hall of fame data: {bool(context.get(\"hall_of_fame\"))}')
                print(f'- Analytics data: {bool(context.get(\"analytics_data\"))}')
            except Exception as e:
                print(f'Could not read pipeline context: {e}')
            "
          else
            echo "No pipeline context found - pipeline may have failed early"
          fi
